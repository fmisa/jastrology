/*
 * Jastrology - Copyright 2006 Fengbo Xie, All Rights Reserved.
 *
 * http://www.ivstars.com/jastrology
 * http://sourceforge.net/projects/jastrology
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.ivstars.astrology.gui;

import com.ivstars.astrology.ChartModel;
import com.ivstars.astrology.Constants;
import com.ivstars.astrology.util.DegreeUtil;
import java.awt.Dimension;
import java.awt.Font;
import java.text.ParseException;
import java.util.Calendar;
import javax.swing.JOptionPane;
import net.sf.anole.Messager;
import net.sf.anole.MessagerFactory;

/**
 *
 * @author  Administrator
 */
public class ChartModelDialog extends javax.swing.JDialog {
    private static Messager messager = MessagerFactory.getMessager(Constants.BASE_PACKAGE);
    private ChartModel model;
    private Font lFont = GuiHelper.getFont("Label");
    private Font bFont = GuiHelper.getFont("Button");
    private Font cFont = GuiHelper.getFont("Input");
    /** Creates new form ChartModelDialog */
    public ChartModelDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void setModel(ChartModel cmodel){
        if(cmodel!=null){
            this.model = cmodel;            
            reset();
        }
    }
    public ChartModel getModel(){
        return model;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" 生成的代码 ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel2 = new javax.swing.JLabel();
        monthcb = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        daycb = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        yearcb = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        timecb = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        daylightcb = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        timezonecb = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        longtf = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        latitf = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        nametf = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        locationtf = new javax.swing.JTextField();
        resetbtn = new javax.swing.JButton();
        mapbtn = new javax.swing.JButton();
        okbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridLayout(3, 8, 1, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jLabel2.setFont(lFont);
        jLabel2.setLabelFor(monthcb);
        jLabel2.setText(messager.getMessage("ChartModelDialog.Label.month"));
        getContentPane().add(jLabel2);

        monthcb.setFont(cFont);
        monthcb.setModel(new javax.swing.DefaultComboBoxModel(messager.getMessage("ChartModelDialog.months").split(",")));
        getContentPane().add(monthcb);

        jLabel3.setFont(lFont);
        jLabel3.setLabelFor(daycb);
        jLabel3.setText(messager.getMessage("ChartModelDialog.Label.day"));
        getContentPane().add(jLabel3);

        daycb.setFont(cFont);
        daycb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        getContentPane().add(daycb);

        jLabel4.setFont(lFont);
        jLabel4.setLabelFor(yearcb);
        jLabel4.setText(messager.getMessage("ChartModelDialog.Label.year"));
        getContentPane().add(jLabel4);

        yearcb.setEditable(true);
        yearcb.setFont(cFont);
        String[] years = new String[120];
        for(int i=0;i<120;i++){
            years[i]=Integer.toString(1930+i);
        }
        yearcb.setModel(new javax.swing.DefaultComboBoxModel(years));
        getContentPane().add(yearcb);

        jLabel5.setFont(lFont);
        jLabel5.setLabelFor(timecb);
        jLabel5.setText(messager.getMessage("ChartModelDialog.Label.time"));
        getContentPane().add(jLabel5);

        timecb.setEditable(true);
        timecb.setFont(cFont);
        String[] times = new String[24];
        for(int i=0;i<24;i++){
            times[i]=i+":00";
        }
        timecb.setModel(new javax.swing.DefaultComboBoxModel(times));
        getContentPane().add(timecb);

        jLabel6.setFont(lFont);
        jLabel6.setLabelFor(daylightcb);
        jLabel6.setText(messager.getMessage("ChartModelDialog.Label.daylight"));
        getContentPane().add(jLabel6);

        daylightcb.setFont(cFont);
        daylightcb.setModel(new javax.swing.DefaultComboBoxModel(new String[]{messager.getMessage("No"),messager.getMessage("Yes")}));
        getContentPane().add(daylightcb);

        jLabel7.setFont(lFont);
        jLabel7.setText(messager.getMessage("ChartModelDialog.Label.timezone"));
        getContentPane().add(jLabel7);

        timezonecb.setEditable(true);
        timezonecb.setFont(cFont);
        String[] tzs = new String[24];
        for(int i=0;i<24;i++){
            if(i<12){
                tzs[i]="GMT"+(i-12)+":00";
            }else{
                tzs[i]="GMT+"+(i-12)+":00";
            }
        }
        timezonecb.setModel(new javax.swing.DefaultComboBoxModel(tzs));
        getContentPane().add(timezonecb);

        jLabel8.setFont(lFont);
        jLabel8.setText(messager.getMessage("ChartModelDialog.Label.longitude"));
        getContentPane().add(jLabel8);

        longtf.setFont(cFont);
        getContentPane().add(longtf);

        jLabel9.setFont(lFont);
        jLabel9.setText(messager.getMessage("ChartModelDialog.Label.latitude"));
        getContentPane().add(jLabel9);

        latitf.setFont(cFont);
        getContentPane().add(latitf);

        jLabel10.setFont(lFont);
        jLabel10.setLabelFor(nametf);
        jLabel10.setText(messager.getMessage("ChartModelDialog.Label.name"));
        getContentPane().add(jLabel10);

        nametf.setFont(cFont);
        getContentPane().add(nametf);

        jLabel11.setFont(lFont);
        jLabel11.setLabelFor(locationtf);
        jLabel11.setText(messager.getMessage("ChartModelDialog.Label.location"));
        getContentPane().add(jLabel11);

        locationtf.setFont(cFont);
        getContentPane().add(locationtf);

        resetbtn.setFont(bFont);
        resetbtn.setText(messager.getMessage("ChartModel.Button.Reset"));
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });

        getContentPane().add(resetbtn);

        mapbtn.setFont(bFont);
        mapbtn.setText(messager.getMessage("ChartModel.Button.Map"));
        getContentPane().add(mapbtn);

        okbtn.setFont(bFont);
        okbtn.setText(messager.getMessage("OK"));
        okbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okbtnActionPerformed(evt);
            }
        });

        getContentPane().add(okbtn);

        cancelbtn.setFont(bFont);
        cancelbtn.setText(messager.getMessage("Cancel"));
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });

        getContentPane().add(cancelbtn);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        this.model = null;
        this.setVisible(false);
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        if(model!=null) reset();
    }//GEN-LAST:event_resetbtnActionPerformed

    private void okbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okbtnActionPerformed
        this.model = buildModel();
        this.setVisible(false);        
    }//GEN-LAST:event_okbtnActionPerformed
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChartModelDialog dialog=new ChartModelDialog(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
                System.out.println(dialog.getModel());
            }
        });
    }
    
    private ChartModel buildModel(){
        String date = yearcb.getSelectedItem().toString()+"-"+(monthcb.getSelectedIndex()+1)+"-"+
                daycb.getSelectedItem().toString()+" "+timecb.getSelectedItem().toString();
        try {
            ChartModel model = new ChartModel(date,timezonecb.getSelectedItem().toString(),
                    DegreeUtil.parseAxis(latitf.getText()),DegreeUtil.parseAxis(longtf.getText()));
            model.setName(nametf.getText());
            model.getLocation().setName(locationtf.getText());
            return model;
        } catch (ParseException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,messager.getMessage("ChartModelDialog.buildModel.error",new Object[]{ex}),
                    messager.getMessage("ChartModelDialog.buildModel.error.title"),JOptionPane.ERROR_MESSAGE);
        }
        return null;
    }

    private void reset() {
        
        Calendar c = Calendar.getInstance(model.getTimezone());
            c.setTime(model.getDate());
            yearcb.setSelectedItem(c.get(Calendar.YEAR));
            monthcb.setSelectedIndex(c.get(Calendar.MONTH));
            daycb.setSelectedIndex(c.get(Calendar.DATE)-1);
            timecb.setSelectedItem(c.get(Calendar.HOUR_OF_DAY)+":"+c.get(Calendar.MINUTE));
            timezonecb.setSelectedItem(model.getTimezone().getID());
            longtf.setText(DegreeUtil.format(model.getLongitude(),"h:m:sw"));
            latitf.setText(DegreeUtil.format(model.getLatitude(),"h:m:sn"));
            nametf.setText(model.getName());
            locationtf.setText(model.getLocation().getName());
    }

    public Dimension getPreferredSize() {
        return new Dimension(600,100);
    }
    // 变量声明 - 不进行修改//GEN-BEGIN:variables
    private javax.swing.JButton cancelbtn;
    private javax.swing.JComboBox daycb;
    private javax.swing.JComboBox daylightcb;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField latitf;
    private javax.swing.JTextField locationtf;
    private javax.swing.JTextField longtf;
    private javax.swing.JButton mapbtn;
    private javax.swing.JComboBox monthcb;
    private javax.swing.JTextField nametf;
    private javax.swing.JButton okbtn;
    private javax.swing.JButton resetbtn;
    private javax.swing.JComboBox timecb;
    private javax.swing.JComboBox timezonecb;
    private javax.swing.JComboBox yearcb;
    // 变量声明结束//GEN-END:variables
    
}
